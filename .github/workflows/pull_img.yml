name: Dowload docker img and upload to Aliyun

on:
  workflow_dispatch:
    inputs:
      # registry:
      #   description: 'image registry default is docker.io'
      #   default: "docker.io"
      #   required: true
      img:
        description: 'image to download, for instance, tensorflow/tensorflow'
        required: true
      compress:
        description: 'whether to compress the docker image, VM for github action has 14GB limit, if the image is too big, it is advised not to compress. set to 0 to skip compression'
        default: "1"
        required: true
      accessKeyID:
        required: true
      accessKeySecret:
        required: true
      ossEndpoint:
        default: "oss-cn-beijing.aliyuncs.com"
        required: true
      ossPath:
        default: "oss://oneflow-static/img"
        required: true

jobs:
  downloadDockerImg:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - env:
        IMG_NAME: ${{ github.event.inputs.img }}
        COMPRESS: ${{ github.event.inputs.compress }}
      run: |
        set -x
        python3 -m pip install pathvalidate
        export sanitized_file=$(python3 sanitize_filename.py)
        export tar_file=${sanitized_file}.tar
        export gz_file=${tar_file}.gz
        curl http://gosspublic.alicdn.com/ossutil/1.6.19/ossutil64 -o ossutil64
        chmod 755 ossutil64
        ./ossutil64 config -e ${{ github.event.inputs.ossEndpoint }} -i ${{ github.event.inputs.accessKeyID }} -k ${{ github.event.inputs.accessKeySecret }}  -L EN -c $HOME/.ossutilconfig

        if [ "${COMPRESS}" = "1" ]; then
          docker pull ${{ github.event.inputs.img }}
          docker save ${{ github.event.inputs.img }} | gzip > ${gz_file}
          ./ossutil64 --update cp ${gz_file} ${{ github.event.inputs.ossPath }}/${gz_file}
        else
          docker run --rm -v $PWD:$PWD -w $PWD ananace/skopeo copy docker://${{ github.event.inputs.img }} dir:${sanitized_file}
          ./ossutil64 --update cp --recursive ${sanitized_file} ${{ github.event.inputs.ossPath }}/${sanitized_file}
        fi
