name: Dowload docker img and upload to Aliyun

on:
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]
    branches:
      - '*'
  workflow_dispatch:
    inputs:
      img:
        description: 'image to download, for instance, tensorflow/tensorflow'
        required: true
      compress:
        description: 'whether to compress the docker image, VM for github action has 14GB limit, if the image is too big, it is advised not to compress. set to 0 to skip compression'
        default: "1"
        required: true

jobs:
  downloadDockerImg:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - env:
        IMG_NAME: ${{ github.event.inputs.img }}
        COMPRESS: ${{ github.event.inputs.compress }}
        OSS_ACCESS_KEY_ID: ${{ secrets.OSS_ACCESS_KEY_ID }}
        OSS_ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
      run: |
        echo "GITHUB_RUN_ID:${GITHUB_RUN_ID}"
        set -x
        python3 -m pip install pathvalidate
        export sanitized_file=$(python3 sanitize_filename.py)
        export tar_file=${sanitized_file}.tar
        export gz_file=${tar_file}.gz
        IMG_NAME=${IMG_NAME:-"busybox"}
        sudo npm install -g aliyun-oss-upload-stream aliyun-sdk
        export OSS_ACCESS_KEY_KEY=img/${gz_file}
        docker pull ${IMG_NAME}
        docker save ${IMG_NAME} | gzip | node stream_oss.js
